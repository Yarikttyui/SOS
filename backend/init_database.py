"""
–°–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
–°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—ã –∏ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –∏—Ö –Ω–∞—á–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
"""
import sys
import os
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent))

from sqlalchemy.orm import Session
from datetime import datetime, timedelta
import random

from app.core.database import sync_engine, SessionLocal, Base
from app.core.security import get_password_hash
from app.models.user import User, UserRole, RescuerSpecialization
from app.models.sos_alert import SOSAlert, EmergencyType, AlertStatus, AlertPriority
from app.models.team import RescueTeam, TeamStatus, TeamType
from app.models.notification import Notification


def create_tables():
    """–°–æ–∑–¥–∞—Ç—å –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("üóÑÔ∏è  –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü...")
    Base.metadata.create_all(bind=sync_engine)
    print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")


def create_users(db: Session):
    """–°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    print("\nüë• –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    users_data = [
        {
            "email": "admin@test.ru",
            "phone": "+79991234567",
            "password": "Test1234",
            "role": "admin",
            "full_name": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –°–∏—Å—Ç–µ–º—ã"
        },
        
        {
            "email": "coordinator@test.ru",
            "phone": "+79991234568",
            "password": "Test1234",
            "role": "coordinator",
            "full_name": "–ò–≤–∞–Ω –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–æ–≤"
        },
        
        {
            "email": "operator@test.ru",
            "phone": "+79991234569",
            "password": "Test1234",
            "role": "operator",
            "full_name": "–ú–∞—Ä–∏—è –û–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤–∞"
        },
        {
            "email": "operator2@test.ru",
            "phone": "+79991234570",
            "password": "Test1234",
            "role": "operator",
            "full_name": "–°–µ—Ä–≥–µ–π –û–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤"
        },

        {
            "email": "rescuer@test.ru",
            "phone": "+79991234590",
            "password": "Test1234",
            "role": "rescuer",
            "full_name": "–¢–µ—Å—Ç–æ–≤—ã–π –°–ø–∞—Å–∞—Ç–µ–ª—å",
            "specialization": "search_rescue",
            "is_team_leader": True
        },
        
        {
            "email": "rescuer1@test.ru",
            "phone": "+79991234571",
            "password": "Test1234",
            "role": "rescuer",
            "full_name": "–ê–ª–µ–∫—Å–µ–π –ü–æ–∂–∞—Ä–Ω—ã–π",
            "specialization": "firefighter",
            "is_team_leader": True
        },
        {
            "email": "rescuer2@test.ru",
            "phone": "+79991234572",
            "password": "Test1234",
            "role": "rescuer",
            "full_name": "–î–º–∏—Ç—Ä–∏–π –û–≥–Ω–µ–±–æ—Ä–µ—Ü",
            "specialization": "firefighter"
        },
        
        {
            "email": "rescuer3@test.ru",
            "phone": "+79991234573",
            "password": "Test1234",
            "role": "rescuer",
            "full_name": "–ï–ª–µ–Ω–∞ –í—Ä–∞—á–µ–≤–∞",
            "specialization": "paramedic",
            "is_team_leader": True
        },
        {
            "email": "rescuer4@test.ru",
            "phone": "+79991234574",
            "password": "Test1234",
            "role": "rescuer",
            "full_name": "–û–ª—å–≥–∞ –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è",
            "specialization": "paramedic"
        },
        
        {
            "email": "rescuer5@test.ru",
            "phone": "+79991234575",
            "password": "Test1234",
            "role": "rescuer",
            "full_name": "–ù–∏–∫–æ–ª–∞–π –ü–æ–ª–∏—Ü–µ–π—Å–∫–∏–π",
            "specialization": "police",
            "is_team_leader": True
        },
        {
            "email": "rescuer6@test.ru",
            "phone": "+79991234576",
            "password": "Test1234",
            "role": "rescuer",
            "full_name": "–ê–Ω–¥—Ä–µ–π –ü—Ä–∞–≤–æ–ø–æ—Ä—è–¥–∫–æ–≤",
            "specialization": "police"
        },
        
        {
            "email": "rescuer7@test.ru",
            "phone": "+79991234577",
            "password": "Test1234",
            "role": "rescuer",
            "full_name": "–í–∏–∫—Ç–æ—Ä –í–æ–¥–Ω—ã–π",
            "specialization": "water_rescue"
        },
        
        {
            "email": "rescuer8@test.ru",
            "phone": "+79991234578",
            "password": "Test1234",
            "role": "rescuer",
            "full_name": "–ú–∞–∫—Å–∏–º –ì–æ—Ä–Ω—ã–π",
            "specialization": "mountain_rescue"
        },
        
        {
            "email": "rescuer9@test.ru",
            "phone": "+79991234579",
            "password": "Test1234",
            "role": "rescuer",
            "full_name": "–ò–≥–æ—Ä—å –ü–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤",
            "specialization": "search_rescue"
        },
        
        {
            "email": "citizen@test.ru",
            "phone": "+79991234580",
            "password": "Test1234",
            "role": "citizen",
            "full_name": "–ü–µ—Ç—Ä –ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∏–π"
        },
        {
            "email": "citizen2@test.ru",
            "phone": "+79991234581",
            "password": "Test1234",
            "role": "citizen",
            "full_name": "–ê–Ω–Ω–∞ –ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∞—è"
        },
        {
            "email": "citizen3@test.ru",
            "phone": "+79991234582",
            "password": "Test1234",
            "role": "citizen",
            "full_name": "–ú–∏—Ö–∞–∏–ª –û–±—ã—á–Ω—ã–π"
        }
    ]
    
    created_users = {}
    
    for user_data in users_data:
        existing_user = db.query(User).filter(User.email == user_data["email"]).first()
        if existing_user:
            print(f"  ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º: {existing_user.full_name} ({existing_user.email})")
            created_users[existing_user.email] = existing_user
            continue

        password = user_data.pop("password")
        specialization = user_data.pop("specialization", None)
        is_team_leader = user_data.pop("is_team_leader", False)
        
        user = User(
            **user_data,
            hashed_password=get_password_hash(password),
            specialization=specialization,
            is_team_leader=is_team_leader,
            created_at=datetime.utcnow()
        )
        db.add(user)
        db.flush()
        created_users[user.email] = user
        print(f"  ‚úì –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.full_name} ({user.role})")
    
    db.commit()
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(created_users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    return created_users


def create_teams(db: Session, users: dict):
    """–°–æ–∑–¥–∞—Ç—å –±—Ä–∏–≥–∞–¥—ã —Å–ø–∞—Å–∞—Ç–µ–ª–µ–π"""
    print("\nüöí –°–æ–∑–¥–∞–Ω–∏–µ –±—Ä–∏–≥–∞–¥...")
    
    teams_data = [
        {
            "name": "–ü–æ–∂–∞—Ä–Ω–∞—è –±—Ä–∏–≥–∞–¥–∞ –ê–ª—å—Ñ–∞",
            "type": "fire",
            "status": "available",
            "leader_email": "rescuer1@test.ru",
            "members_emails": ["rescuer1@test.ru", "rescuer2@test.ru"],
            "contact_phone": "+79991111111",
            "contact_email": "fire.alpha@rescue.ru",
            "current_latitude": 55.7558,
            "current_longitude": 37.6173,
            "capacity": "5-10 —á–µ–ª–æ–≤–µ–∫",
            "specialization": ["firefighter"],
            "equipment": [
                "–ü–æ–∂–∞—Ä–Ω—ã–µ —Ä—É–∫–∞–≤–∞",
                "–ê–≤—Ç–æ–ª–µ—Å—Ç–Ω–∏—Ü–∞",
                "–ó–∞—â–∏—Ç–Ω—ã–µ –∫–æ—Å—Ç—é–º—ã",
                "–î—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ –∞–ø–ø–∞—Ä–∞—Ç—ã"
            ]
        },
        {
            "name": "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –±—Ä–∏–≥–∞–¥–∞ Vita",
            "type": "medical",
            "status": "available",
            "leader_email": "rescuer3@test.ru",
            "members_emails": ["rescuer3@test.ru", "rescuer4@test.ru"],
            "contact_phone": "+79992222222",
            "contact_email": "medical.vita@rescue.ru",
            "current_latitude": 55.7612,
            "current_longitude": 37.6098,
            "capacity": "3-5 —á–µ–ª–æ–≤–µ–∫",
            "specialization": ["paramedic"],
            "equipment": [
                "–î–µ—Ñ–∏–±—Ä–∏–ª–ª—è—Ç–æ—Ä",
                "–ú–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã",
                "–ù–æ—Å–∏–ª–∫–∏",
                "–†–µ–∞–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω—ã–π –Ω–∞–±–æ—Ä"
            ]
        },
        {
            "name": "–ü–æ–ª–∏—Ü–µ–π—Å–∫–∏–π –æ—Ç—Ä—è–¥ –°—Ç—Ä–∞–∂",
            "type": "police",
            "status": "busy",
            "leader_email": "rescuer5@test.ru",
            "members_emails": ["rescuer5@test.ru", "rescuer6@test.ru"],
            "contact_phone": "+79993333333",
            "contact_email": "police.guard@rescue.ru",
            "current_latitude": 55.7500,
            "current_longitude": 37.6200,
            "capacity": "4-8 —á–µ–ª–æ–≤–µ–∫",
            "specialization": ["police"],
            "equipment": [
                "–°–ø–µ—Ü—Ç–µ—Ö–Ω–∏–∫–∞",
                "–°—Ä–µ–¥—Å—Ç–≤–∞ —Å–≤—è–∑–∏",
                "–ó–∞—â–∏—Ç–Ω–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ"
            ]
        },
        {
            "name": "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –±—Ä–∏–≥–∞–¥–∞ –û–º–µ–≥–∞",
            "type": "multi_purpose",
            "status": "available",
            "leader_email": "rescuer9@test.ru",
            "members_emails": ["rescuer9@test.ru", "rescuer7@test.ru", "rescuer8@test.ru", "rescuer@test.ru"],
            "contact_phone": "+79994444444",
            "contact_email": "omega@rescue.ru",
            "current_latitude": 55.7400,
            "current_longitude": 37.6300,
            "capacity": "10-15 —á–µ–ª–æ–≤–µ–∫",
            "specialization": ["search_rescue", "water_rescue", "mountain_rescue"],
            "equipment": [
                "GPS-–Ω–∞–≤–∏–≥–∞—Ç–æ—Ä—ã",
                "–ê–ª—å–ø–∏–Ω–∏—Å—Ç—Å–∫–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ",
                "–°–ø–∞—Å–∞—Ç–µ–ª—å–Ω—ã–µ –∂–∏–ª–µ—Ç—ã",
                "–ü–æ–∏—Å–∫–æ–≤—ã–µ –¥—Ä–æ–Ω—ã"
            ]
        }
    ]
    
    created_teams = {}
    
    for team_data in teams_data:
        leader_email = team_data.pop("leader_email")
        members_emails = team_data.pop("members_emails")
        equipment = team_data.pop("equipment", [])
        specialization = team_data.pop("specialization", [])
        
        leader = users.get(leader_email)
        
        members = []
        for email in members_emails:
            member = users.get(email)
            if member:
                members.append({
                    "user_id": member.id,
                    "full_name": member.full_name,
                    "specialization": member.specialization
                })
        
        team = RescueTeam(
            **team_data,
            leader_id=leader.id if leader else None,
            leader_name=leader.full_name if leader else None,
            members=members,
            member_count=len(members),
            equipment=equipment,
            specialization=specialization,
            created_at=datetime.utcnow(),
            updated_at=datetime.utcnow()
        )
        db.add(team)
        db.flush()
        
        for email in members_emails:
            member = users.get(email)
            if member:
                member.team_id = team.id
        
        created_teams[team.name] = team
        print(f"  ‚úì –°–æ–∑–¥–∞–Ω–∞ –±—Ä–∏–≥–∞–¥–∞: {team.name} ({len(members)} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)")
    
    db.commit()
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(created_teams)} –±—Ä–∏–≥–∞–¥")
    return created_teams


def create_alerts(db: Session, users: dict, teams: dict):
    """–°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç—Ä–µ–≤–æ–≥–∏"""
    print("\nüö® –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–µ–≤–æ–≥...")
    
    alerts_data = [
        {
            "user_email": "citizen@test.ru",
            "type": "fire",
            "status": "in_progress",
            "priority": 1,
            "title": "–ü–æ–∂–∞—Ä –≤ –∂–∏–ª–æ–º –¥–æ–º–µ",
            "description": "–ü–æ–∂–∞—Ä –Ω–∞ 5 —ç—Ç–∞–∂–µ, —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å—Ä–æ—á–Ω–∞—è —ç–≤–∞–∫—É–∞—Ü–∏—è –∂–∏–ª—å—Ü–æ–≤",
            "latitude": 55.7558,
            "longitude": 37.6173,
            "address": "—É–ª. –õ–µ–Ω–∏–Ω–∞, –¥. 15, –∫–≤. 53",
            "assigned_team": "–ü–æ–∂–∞—Ä–Ω–∞—è –±—Ä–∏–≥–∞–¥–∞ –ê–ª—å—Ñ–∞",
            "assigned_rescuer": "rescuer1@test.ru",
            "created_hours_ago": 0.5
        },
        {
            "user_email": "citizen2@test.ru",
            "type": "medical",
            "status": "assigned",
            "priority": 1,
            "title": "–°–µ—Ä–¥–µ—á–Ω—ã–π –ø—Ä–∏—Å—Ç—É–ø",
            "description": "–ú—É–∂—á–∏–Ω–∞ 65 –ª–µ—Ç, –±–æ–ª–∏ –≤ –≥—Ä—É–¥–∏, –∑–∞—Ç—Ä—É–¥–Ω–µ–Ω–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ",
            "latitude": 55.7612,
            "longitude": 37.6098,
            "address": "–ø—Ä. –ú–∏—Ä–∞, –¥. 32, –∫–≤. 12",
            "assigned_team": "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –±—Ä–∏–≥–∞–¥–∞ Vita",
            "assigned_rescuer": "rescuer3@test.ru",
            "created_hours_ago": 1
        },
        {
            "user_email": "citizen3@test.ru",
            "type": "police",
            "status": "in_progress",
            "priority": 2,
            "title": "–ö—Ä–∞–∂–∞ —Å–æ –≤–∑–ª–æ–º–æ–º",
            "description": "–ö–≤–∞—Ä—Ç–∏—Ä–Ω–∞—è –∫—Ä–∞–∂–∞, –≤–æ—Ä—ã —Å–∫—Ä—ã–ª–∏—Å—å –≤ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏",
            "latitude": 55.7500,
            "longitude": 37.6200,
            "address": "—É–ª. –°–∞–¥–æ–≤–∞—è, –¥. 7, –∫–≤. 28",
            "assigned_team": "–ü–æ–ª–∏—Ü–µ–π—Å–∫–∏–π –æ—Ç—Ä—è–¥ –°—Ç—Ä–∞–∂",
            "assigned_rescuer": "rescuer5@test.ru",
            "created_hours_ago": 2
        },
        
        {
            "user_email": "citizen@test.ru",
            "type": "water_rescue",
            "status": "pending",
            "priority": 2,
            "title": "–£—Ç–æ–ø–∞—é—â–∏–π –Ω–∞ –æ–∑–µ—Ä–µ",
            "description": "–ß–µ–ª–æ–≤–µ–∫ –≤ –≤–æ–¥–µ, —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å",
            "latitude": 55.7400,
            "longitude": 37.6300,
            "address": "–ü–∞—Ä–∫ –°–æ–∫–æ–ª—å–Ω–∏–∫–∏, –ë–æ–ª—å—à–æ–π –ø—Ä—É–¥",
            "created_hours_ago": 0.2
        },
        {
            "user_email": "citizen2@test.ru",
            "type": "search_rescue",
            "status": "pending",
            "priority": 3,
            "title": "–ü–æ—Ç–µ—Ä—è–ª—Å—è —Ä–µ–±–µ–Ω–æ–∫",
            "description": "–ú–∞–ª—å—á–∏–∫ 7 –ª–µ—Ç, –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –≤–∏–¥–µ–ª–∏ 2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥ –≤ –ø–∞—Ä–∫–µ",
            "latitude": 55.7350,
            "longitude": 37.6250,
            "address": "–ü–∞—Ä–∫ –ì–æ—Ä—å–∫–æ–≥–æ, –≥–ª–∞–≤–Ω–∞—è –∞–ª–ª–µ—è",
            "created_hours_ago": 2.5
        },
        
        {
            "user_email": "citizen3@test.ru",
            "type": "medical",
            "status": "completed",
            "priority": 2,
            "title": "–ü–µ—Ä–µ–ª–æ–º –Ω–æ–≥–∏",
            "description": "–ñ–µ–Ω—â–∏–Ω–∞ —É–ø–∞–ª–∞ —Å –ª–µ—Å—Ç–Ω–∏—Ü—ã, –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–µ –Ω–∞ –ø–µ—Ä–µ–ª–æ–º",
            "latitude": 55.7300,
            "longitude": 37.6400,
            "address": "—É–ª. –¢–≤–µ—Ä—Å–∫–∞—è, –¥. 25",
            "assigned_team": "–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è –±—Ä–∏–≥–∞–¥–∞ Vita",
            "assigned_rescuer": "rescuer3@test.ru",
            "created_hours_ago": 24,
            "completed_hours_ago": 22
        },
        {
            "user_email": "citizen@test.ru",
            "type": "fire",
            "status": "completed",
            "priority": 3,
            "title": "–ó–∞–¥—ã–º–ª–µ–Ω–∏–µ –Ω–∞ –∫—É—Ö–Ω–µ",
            "description": "–°–≥–æ—Ä–µ–ª–∞ –µ–¥–∞ –Ω–∞ –ø–ª–∏—Ç–µ, –º–Ω–æ–≥–æ –¥—ã–º–∞",
            "latitude": 55.7450,
            "longitude": 37.6150,
            "address": "—É–ª. –ê—Ä–±–∞—Ç, –¥. 40, –∫–≤. 8",
            "assigned_team": "–ü–æ–∂–∞—Ä–Ω–∞—è –±—Ä–∏–≥–∞–¥–∞ –ê–ª—å—Ñ–∞",
            "assigned_rescuer": "rescuer1@test.ru",
            "created_hours_ago": 48,
            "completed_hours_ago": 47
        },
        {
            "user_email": "citizen2@test.ru",
            "type": "ecological",
            "status": "completed",
            "priority": 4,
            "title": "–£—Ç–µ—á–∫–∞ —Ö–∏–º–∏–∫–∞—Ç–æ–≤",
            "description": "–†–∞–∑–ª–∏–≤ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –≤–µ—â–µ—Å—Ç–≤–∞ –≤–æ–∑–ª–µ –∑–∞–≤–æ–¥–∞",
            "latitude": 55.7200,
            "longitude": 37.6500,
            "address": "–ü—Ä–æ–º–∑–æ–Ω–∞ –Æ–∂–Ω–∞—è, —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –∑–∞–≤–æ–¥–∞",
            "created_hours_ago": 72,
            "completed_hours_ago": 70
        },
        
        {
            "user_email": "citizen3@test.ru",
            "type": "general",
            "status": "cancelled",
            "priority": 5,
            "title": "–õ–æ–∂–Ω–∞—è —Ç—Ä–µ–≤–æ–≥–∞",
            "description": "–°–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ä–∞–±–æ—Ç–∞–ª–∞ –ø–æ –æ—à–∏–±–∫–µ",
            "latitude": 55.7600,
            "longitude": 37.6100,
            "address": "—É–ª. –ü—É—à–∫–∏–Ω–∞, –¥. 10",
            "created_hours_ago": 96
        }
    ]
    
    created_alerts = []
    
    for alert_data in alerts_data:
        user_email = alert_data.pop("user_email")
        assigned_team_name = alert_data.pop("assigned_team", None)
        assigned_rescuer_email = alert_data.pop("assigned_rescuer", None)
        created_hours_ago = alert_data.pop("created_hours_ago", 1)
        completed_hours_ago = alert_data.pop("completed_hours_ago", None)
        
        user = users.get(user_email)
        team = teams.get(assigned_team_name) if assigned_team_name else None
        rescuer = users.get(assigned_rescuer_email) if assigned_rescuer_email else None
        
        created_at = datetime.utcnow() - timedelta(hours=created_hours_ago)
        
        alert = SOSAlert(
            user_id=user.id,
            assigned_to=rescuer.id if rescuer else None,
            team_id=team.id if team else None,
            created_at=created_at,
            updated_at=datetime.utcnow(),
            **alert_data
        )
        
        if alert.status in ["assigned", "in_progress"]:
            alert.assigned_at = created_at + timedelta(minutes=5)
        
        if alert.status == "completed" and completed_hours_ago:
            alert.completed_at = datetime.utcnow() - timedelta(hours=completed_hours_ago)
        
        if alert_data["type"] in ["fire", "medical"]:
            alert.ai_analysis = {
                "confidence": random.uniform(0.75, 0.95),
                "severity": "high" if alert.priority <= 2 else "medium",
                "keywords": ["urgent", "immediate response needed"] if alert.priority == 1 else ["assistance required"],
                "recommended_team": alert_data["type"]
            }
        
        db.add(alert)
        db.flush()
        created_alerts.append(alert)
        print(f"  ‚úì –°–æ–∑–¥–∞–Ω–∞ —Ç—Ä–µ–≤–æ–≥–∞: {alert.title} ({alert.status})")
    
    db.commit()
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(created_alerts)} —Ç—Ä–µ–≤–æ–≥")
    return created_alerts


def create_notifications(db: Session, users: dict, alerts: list):
    """–°–æ–∑–¥–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
    print("\nüì¨ –°–æ–∑–¥–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
    
    created_notifications = []
    
    operators = [u for u in users.values() if u.role == "operator"]
    
    for alert in alerts[:3]:  # –¢–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–≤—ã—Ö 3 —Ç—Ä–µ–≤–æ–≥
        for operator in operators:
            notification = Notification(
                user_id=operator.id,
                type="alert_created",
                title="–ù–æ–≤–∞—è —Ç—Ä–µ–≤–æ–≥–∞",
                message=f"–ü–æ—Å—Ç—É–ø–∏–ª–∞ –Ω–æ–≤–∞—è —Ç—Ä–µ–≤–æ–≥–∞: {alert.title}",
                data={"alert_id": alert.id},
                is_read=random.choice([True, False]),
                created_at=alert.created_at
            )
            db.add(notification)
            created_notifications.append(notification)
    
    db.commit()
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(created_notifications)} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
    return created_notifications


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏"""
    print("=" * 60)
    print("üöÄ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ë–ê–ó–´ –î–ê–ù–ù–´–• SOS RESCUE SYSTEM")
    print("=" * 60)
    
    try:
        create_tables()
        
        db = SessionLocal()
        
        try:
            users = create_users(db)
            teams = create_teams(db, users)
            alerts = create_alerts(db, users, teams)
            notifications = create_notifications(db, users, alerts)
            
            print("\n" + "=" * 60)
            print("‚úÖ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
            print("=" * 60)
            print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            print(f"  ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
            print(f"  ‚Ä¢ –ë—Ä–∏–≥–∞–¥: {len(teams)}")
            print(f"  ‚Ä¢ –¢—Ä–µ–≤–æ–≥: {len(alerts)}")
            print(f"  ‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {len(notifications)}")
            
            print("\nüîê –¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã (–ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Å–µ—Ö: Test1234):")
            print("  ‚Ä¢ admin@test.ru - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
            print("  ‚Ä¢ coordinator@test.ru - –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä")
            print("  ‚Ä¢ operator@test.ru - –û–ø–µ—Ä–∞—Ç–æ—Ä")
            print("  ‚Ä¢ rescuer1@test.ru - –°–ø–∞—Å–∞—Ç–µ–ª—å (–ª–∏–¥–µ—Ä –ø–æ–∂–∞—Ä–Ω–æ–π –±—Ä–∏–≥–∞–¥—ã)")
            print("  ‚Ä¢ citizen@test.ru - –ì—Ä–∞–∂–¥–∞–Ω–∏–Ω")
            
            print("\nüåê –î–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ:")
            print("  ‚Ä¢ –ë—ç–∫–µ–Ω–¥ API: http://localhost:8000")
            print("  ‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API: http://localhost:8000/docs")
            print("  ‚Ä¢ –§—Ä–æ–Ω—Ç–µ–Ω–¥: http://localhost:3001")
            print("=" * 60)
            
        finally:
            db.close()
            
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)


if __name__ == "__main__":
    main()
