version: '3.8'

services:
  mysql:
    image: mysql:8.4
    container_name: rescue_mysql
    environment:
      MYSQL_ROOT_PASSWORD: rescue_root_pass_2024_secure
      MYSQL_DATABASE: rescue_db
      MYSQL_USER: rescue_user
      MYSQL_PASSWORD: rescue_pass_2024_secure
    command: [
      "mysqld",
      "--character-set-server=utf8mb4",
      "--collation-server=utf8mb4_unicode_ci"
    ]
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prescue_root_pass_2024_secure"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - rescue_network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: rescue_redis
    command: redis-server --appendonly yes --requirepass rescue_redis_pass
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - rescue_network
    restart: unless-stopped

  backend:
    build:
      context: ../../backend
      dockerfile: Dockerfile
    container_name: rescue_backend
    env_file:
      - ../../backend/.env.production
    environment:
      DATABASE_URL: mysql+pymysql://rescue_user:rescue_pass_2024_secure@mysql:3306/rescue_db?charset=utf8mb4
      REDIS_URL: redis://:rescue_redis_pass@redis:6379/0
    volumes:
      - ../../backend/uploads:/app/uploads
      - backend_logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - rescue_network
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 4

  celery_worker:
    build:
      context: ../../backend
      dockerfile: Dockerfile
    container_name: rescue_celery_worker
    env_file:
      - ../../backend/.env.production
    environment:
      DATABASE_URL: mysql+pymysql://rescue_user:rescue_pass_2024_secure@mysql:3306/rescue_db?charset=utf8mb4
      REDIS_URL: redis://:rescue_redis_pass@redis:6379/0
    volumes:
      - ../../backend:/app
    depends_on:
      - mysql
      - redis
    networks:
      - rescue_network
    restart: unless-stopped
    command: celery -A app.core.celery_app worker --loglevel=info

  web:
    build:
      context: ../../frontend
      dockerfile: Dockerfile.prod
    container_name: rescue_web
    depends_on:
      - backend
    ports:
      - "80:80"
    networks:
      - rescue_network
    volumes:
      - ./nginx/frontend.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped

volumes:
  mysql_data:
  redis_data:
  backend_logs:

networks:
  rescue_network:
    driver: bridge
